// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shopapp.data.Concrete.EfCore;

namespace shopapp.data.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("shopapp.entity.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CommentPoint")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentString")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FilmId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId");

                    b.HasIndex("FilmId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("shopapp.entity.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AnasayfaGosterim")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Gosterim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KategoriId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResimUrl")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Sene")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("FilmId");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("shopapp.entity.FilmKategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KategoriId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("FilmKategoriler");
                });

            modelBuilder.Entity("shopapp.entity.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("shopapp.entity.Star", b =>
                {
                    b.Property<int>("StarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Birthyear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StarringMovies")
                        .HasColumnType("TEXT");

                    b.Property<string>("Starİmage")
                        .HasColumnType("TEXT");

                    b.HasKey("StarId");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("shopapp.entity.Comment", b =>
                {
                    b.HasOne("shopapp.entity.Film", "Film")
                        .WithMany("Comments")
                        .HasForeignKey("FilmId");
                });

            modelBuilder.Entity("shopapp.entity.FilmKategori", b =>
                {
                    b.HasOne("shopapp.entity.Film", "Film")
                        .WithMany("FilmKategoriler")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shopapp.entity.Kategori", "Kategori")
                        .WithMany("FilmKategoriler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
